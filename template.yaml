AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ProgressAlexaSkill

Parameters:
  AlexaSkill:
    Type: String
    Default: amzn1.ask.skill.07d153f3-c1cc-4317-87d9-b37faf71582a
    AllowedPattern: "amzn[0-9].ask.skill.*-*-*-*-*"
  

Globals:
  Function:
    MemorySize: 128
    Timeout: 3
    Environment:
      Variables:
        TABLE: !Ref Table

Resources:
  AlexaFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Handler: app.handler
      Runtime: nodejs12.x
      Role: !GetAtt AlexaFunctionRole.Arn
      Events:
        AlexaTrigger:
          Type: AlexaSkill
          SkillId: !Ref AlexaSkill
  
  Table:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: phone
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3
  
  AlexaFunctionRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Description: Allows Lambda to Use SNS
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    
  AlexaFunctionSNSPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: AllowSNSfromLambda
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 'sns:Publish'
            Resource: '*'
      Roles:
        - !Ref AlexaFunctionRole
  
  AlexaFunctionDBPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: AllowDynamoDBWritesfromLambda
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'dynamodb:PutItem'
              - 'dynamodb:GetItem'
              - 'dynamodb:UpdateItem'
            Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Table}"
      Roles:
        - !Ref AlexaFunctionRole


Outputs:
  AlexaFunction:
    Description: "Alexa Lambda Function ARN"
    Value: !GetAtt AlexaFunction.Arn
